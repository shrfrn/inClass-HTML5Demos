/* 
    Stacking Order Within the Same Stacking Context
    -----------------------------------------------
    Here are the basic rules to determine stacking order 
    within a single stacking context (from back to front):

    1. The stacking contextâ€™s root element
    2. Positioned elements with negative z-index values
    3. Non-positioned elements
    4. Positioned elements with a z-index value of auto
    5. Positioned elements with positive z-index values

    positioned elements with negative z-indexes are ordered 
    first within a stacking context, which means they 
    appear behind all other elements. 
    Because of this, it becomes possible for an element 
    to appear behind its own parent.

    body {                  // the default stacking context
        .hero {             // z-index: auto;
            .video-bg {     // z-index: -1; - appears behind .hero
            
            }
        }
    }
    
    .hero has a background color with opacity.
    .video-bg appears behind .hero and seen through the semi-transparent bgc.
*/

*, *::before, *::after {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
}

.hero {
    position: relative;
    display: grid;
    place-items: center;
    
    min-height: 100vh;
    background-color: #3332;
    overflow: clip;

    color: white;
    text-align: center;
}

.hero > * {
    grid-area: 1 / 1;
}

.video-bg {
    position: absolute;
    z-index: -1;

    min-width: 100%;
    min-height: 100%;
}

nav {
    display: flex;
    gap: 1.8em;

    place-self: start end;
    padding-block-start: 2em;
    padding-inline-end: 2em;

}

nav a {
    color: white;
    text-decoration: none;
}

.columns {
    columns: 3 220px;
    padding: 1em;
}

.columns p {
    margin-block-start: 0;
}

.columns h2 {
    column-span: all;
    text-align: center;
    padding-block: 1em;
    background-color: lightgray;
}